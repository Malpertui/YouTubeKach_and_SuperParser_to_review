from pytubefix import YouTube
from moviepy.editor import *
from pytubefix.cli import on_progress
import os 


def afterMain():
    while True:
        waiting = input(f"\n–û—Ç–ª–∏—á–Ω–æ! –ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É. –ù–∞–∂–º–∏—Ç–µ 1 –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –µ—â–µ —á—Ç–æ-—Ç–æ —Å–∫–∞—á–∞—Ç—å.  \n")
        if len(waiting) < 1:
            quit()
        else:
            main()
def main():
    def folder_for_download():
     # check for destination to save file 
        print(r"–ß—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –ø—É—Ç—å, –∫—É–¥–∞ –∫–∞—á–∞—Ç—å (—Ç–∞–∫–æ–≥–æ –ø–ª–∞–Ω–∞: D:\download) –Ω–∞–∂–º–∏—Ç–µ 1") 
        print('–ù–∞–∂–º–∏—Ç–µ 2, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤ –ø–∞–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã (—Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–∞–π–ª–µ file.txt)')
        choice = input('–ù–∞–∂–∏–º–∞–π—Ç–µ 1/2, –ø–æ—Ç–æ–º Enter>>')
        if choice == '1':
            destination = str(input("–í–±–∏–≤–∞–π—Ç–µ –ø—É—Ç—å —Å—é–¥–∞ –∏–ª–∏ –∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤ –ø–∞–ø–∫—É –ø—Ä–æ–≥—Ä–∞–º–º—ã>> ")) or '.'
        else:
            with open('file.txt', 'r') as file:
                destination = file.read()
        return destination


    url = input('–í–≤–µ–¥–∏—Ç–µ URL –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Å–∫–∞—á–∞—Ç—å:  ')
    print('–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ üì∑ –±—ã—Å—Ç—Ä–æ –∏ –≤ —Ö–æ—Ä–æ—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–∂–º–∏—Ç–µ 1')
    print('–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ üîä —Ä–æ–ª–∏–∫–∞ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–∂–º–∏—Ç–µ 2')
    print('–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ üìÄ –≤ –Ω–∞–∏–ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–∂–º–∏—Ç–µ 3 ')
    print('–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ üìΩ –≤ –Ω–∞–∏–ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ (Warning! –≠—Ç–æ –¥–æ–ª–≥–æ –∏ —Ç—è–∂–µ–ª–æ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞) –Ω–∞–∂–º–∏—Ç–µ 4 ')
    yes_or_no = input('–í–≤–µ–¥–∏—Ç–µ 1/2/3/4>>:  ')

    if yes_or_no == '2':
        try:
            video = YouTube(url)
            stream = video.streams.filter(only_audio=True).first()
            title = stream.title.replace("?","")
            print(f'–ö–∞—á–∞—é -={title}=-')
            destination = folder_for_download()

            stream.download(filename=f"{title}.mp3", output_path=destination)
            print("The video is downloaded in MP3")
        except KeyError:
            print("Unable to fetch video information. Please check the video URL or your network connection.")
    
    elif yes_or_no == '1':
        yt = YouTube(url, on_progress_callback = on_progress)

        title = yt.title.replace("?","")
        print(f'–ö–∞—á–∞—é -={title}=-')

        destination = folder_for_download()
 
        ys = yt.streams.get_highest_resolution()

        ys.download(filename=f'{title}.mp4', output_path=destination)

    elif yes_or_no == '4':
        yt = YouTube(url, on_progress_callback = on_progress)

        title = yt.title.replace("?","")
        print(f'–ö–∞—á–∞—é -={title}=-')

        destination = folder_for_download()
 
        # ys = yt.streams.get_highest_resolution()
        # ys = yt.streams.filter(res='720p').first()
        # ys = yt.streams.filter(res='720p').desc().first()
        # ys = yt.streams.filter(progressive=True).last()
        # ys = yt.streams.filter(res='1080p').desc().first() –ø–æ–ª—É—á–∞–µ–º —Å–∞–º–æ–µ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –±–µ–∑ –∑–≤—É–∫–∞
        ys = yt.streams.filter(res='1080p').desc().first()
        ys.download(filename=f'{title}.mp4', output_path=destination)

        # –û—Ç–¥–µ–ª—å–Ω–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ
        stream = yt.streams.filter(only_audio=True).first()
        stream.download(filename=f"{title}.mp3", output_path=destination)

        videoclip = VideoFileClip(filename=fr'{destination}/{title}.mp4')
        audioclip = AudioFileClip(filename=fr'{destination}/{title}.mp3')

        new_audioclip = CompositeAudioClip([audioclip])
        videoclip.audio = new_audioclip
        # videoclip.write_videofile(filename=fr'New_{destination}/{title}.mp4')
        videoclip.write_videofile(filename=fr'{destination}/{title}_vovkina_proga.mp4')
        videoclip.close()
        new_audioclip.close()
        os.remove(fr"{destination}/{title}.mp4")
        os.remove(fr"{destination}/{title}.mp3")


    else:
        yt = YouTube(url, on_progress_callback = on_progress)
        title = yt.title.replace("?","")
        print(f'–ö–∞—á–∞—é {title}')
        destination = folder_for_download()
        ys = yt.streams.get_highest_resolution()
        ys.download(filename=f'{title}.mp4', output_path=destination)
        # Load the mp4 file
        video = VideoFileClip(filename=fr'{destination}/{title}.mp4')

        # Extract audio from video
        video.audio.write_audiofile(filename=fr'{destination}/{title}.mp3')
        video.close()
        os.remove(fr"{destination}/{title}.mp4")

        
while True:
    main()
    afterMain()
